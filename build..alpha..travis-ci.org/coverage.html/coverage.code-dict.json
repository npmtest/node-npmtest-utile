{"/home/travis/build/npmtest/node-npmtest-utile/test.js":"/* istanbul instrument in package npmtest_utile */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-utile/lib.npmtest_utile.js":"/* istanbul instrument in package npmtest_utile */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_utile = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_utile = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-utile/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-utile && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_utile */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_utile\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_utile.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_utile.rollup.js'] =\n            local.assetsDict['/assets.npmtest_utile.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_utile.__dirname + '/lib.npmtest_utile.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-utile/node_modules/utile/lib/index.js":"/*\n * index.js: Top-level include for the `utile` module.\n *\n * (C) 2011, Charlie Robbins & the Contributors\n * MIT LICENSE\n *\n */\n\nvar fs = require('fs'),\n    path = require('path'),\n    util = require('util');\n\nvar utile = module.exports;\n\n//\n// Extend the `utile` object with all methods from the\n// core node `util` methods.\n//\nObject.keys(util).forEach(function (key) {\n  utile[key] = util[key];\n});\n\nObject.defineProperties(utile, {\n\n  //\n  // ### function async\n  // Simple wrapper to `require('async')`.\n  //\n  'async': {\n    get: function() {\n      return utile.async = require('async');\n    }\n  },\n\n  //\n  // ### function inflect\n  // Simple wrapper to `require('i')`.\n  //\n  'inflect': {\n    get: function() {\n      return utile.inflect = require('i')();\n    }\n  },\n\n  //\n  // ### function mkdirp\n  // Simple wrapper to `require('mkdirp')`\n  //\n  'mkdirp': {\n    get: function() {\n      return utile.mkdirp = require('mkdirp');\n    }\n  },\n\n  //\n  // ### function deepEqual\n  // Simple wrapper to `require('deep-equal')`\n  // Remark: deepEqual is 4x faster then using assert.deepEqual\n  //         see: https://gist.github.com/2790507\n  //\n  'deepEqual': {\n    get: function() {\n      return utile.deepEqual = require('deep-equal');\n    }\n  },\n\n  //\n  // ### function rimraf\n  // Simple wrapper to `require('rimraf')`\n  //\n  'rimraf': {\n    get: function() {\n      return utile.rimraf = require('rimraf');\n    }\n  },\n\n  //\n  // ### function cpr\n  // Simple wrapper to `require('ncp').ncp`\n  //\n  'cpr': {\n    get: function() {\n      return utile.cpr = require('ncp').ncp;\n    }\n  },\n\n  //\n  // ### @file {Object}\n  // Lazy-loaded `file` module\n  //\n  'file': {\n    get: function() {\n      return utile.file = require('./file');\n    }\n  },\n\n  //\n  // ### @args {Object}\n  // Lazy-loaded `args` module\n  //\n  'args': {\n    get: function() {\n      return utile.args = require('./args');\n    }\n  },\n\n  //\n  // ### @base64 {Object}\n  // Lazy-loaded `base64` object\n  //\n  'base64': {\n    get: function() {\n      return utile.base64 = require('./base64');\n    }\n  },\n\n  //\n  // ### @format {Object}\n  // Lazy-loaded `format` object\n  //\n  'format': {\n    get: function() {\n      return utile.format = require('./format');\n    }\n  }\n\n});\n\n\n//\n// ### function rargs(_args)\n// #### _args {Arguments} Original function arguments\n//\n// Top-level method will accept a javascript \"arguments\" object\n// (the actual keyword \"arguments\" inside any scope) and return\n// back an Array.\n//\nutile.rargs = function (_args, slice) {\n  if (!slice) {\n    slice = 0;\n  }\n\n  var len = (_args || []).length,\n      args = new Array(len - slice),\n      i;\n\n  //\n  // Convert the raw `_args` to a proper Array.\n  //\n  for (i = slice; i < len; i++) {\n    args[i - slice] = _args[i];\n  }\n\n  return args;\n};\n\n//\n// ### function each (obj, iterator)\n// #### @obj {Object} Object to iterate over\n// #### @iterator {function} Continuation to use on each key. `function (value, key, object)`\n// Iterate over the keys of an object.\n//\nutile.each = function (obj, iterator) {\n  Object.keys(obj).forEach(function (key) {\n    iterator(obj[key], key, obj);\n  });\n};\n\n//\n// ### function find (o)\n//\n//\nutile.find = function (obj, pred) {\n  var value, key;\n\n  for (key in obj) {\n    value = obj[key];\n    if (pred(value, key)) {\n      return value;\n    }\n  }\n};\n\n//\n// ### function pad (str, len, chr)\n// ### @str {String} String to pad\n// ### @len {Number} Number of chars to pad str with\n// ### @chr {String} Optional replacement character, defaults to empty space\n// Appends chr to str until it reaches a length of len\n//\nutile.pad = function pad(str, len, chr) {\n  var s;\n  if (!chr) {\n    chr = ' ';\n  }\n  str = str || '';\n  s = str;\n  if (str.length < len) {\n    for (var i = 0; i < (len - str.length); i++) {\n      s += chr;\n    }\n  }\n  return s;\n}\n\n//\n// ### function path (obj, path, value)\n// ### @obj {Object} Object to insert value into\n// ### @path {Array} List of nested keys to insert value at\n// Retreives a value from given Object, `obj`, located at the\n// nested keys, `path`.\n//\nutile.path = function (obj, path) {\n  var key, i;\n\n  for (i in path) {\n    if (typeof obj === 'undefined') {\n      return undefined;\n    }\n\n    key = path[i];\n    obj = obj[key];\n  }\n\n  return obj;\n};\n\n//\n// ### function createPath (obj, path, value)\n// ### @obj {Object} Object to insert value into\n// ### @path {Array} List of nested keys to insert value at\n// ### @value {*} Value to insert into the object.\n// Inserts the `value` into the given Object, `obj`, creating\n// any keys in `path` along the way if necessary.\n//\nutile.createPath = function (obj, path, value) {\n  var key, i;\n\n  for (i in path) {\n    key = path[i];\n    if (!obj[key]) {\n      obj[key] = ((+i + 1 === path.length) ? value : {});\n    }\n\n    obj = obj[key];\n  }\n};\n\n//\n// ### function mixin (target [source0, source1, ...])\n// Copies enumerable properties from `source0 ... sourceN`\n// onto `target` and returns the resulting object.\n//\nutile.mixin = function (target) {\n  utile.rargs(arguments, 1).forEach(function (o) {\n    Object.getOwnPropertyNames(o).forEach(function(attr) {\n      var getter = Object.getOwnPropertyDescriptor(o, attr).get,\n          setter = Object.getOwnPropertyDescriptor(o, attr).set;\n\n      if (!getter && !setter) {\n        target[attr] = o[attr];\n      }\n      else {\n        Object.defineProperty(target, attr, {\n          get: getter,\n          set: setter\n        });\n      }\n    });\n  });\n\n  return target;\n};\n\n\n//\n// ### function capitalize (str)\n// #### @str {string} String to capitalize\n// Capitalizes the specified `str`.\n//\nutile.capitalize = utile.inflect.camelize;\n\n//\n// ### function escapeRegExp (str)\n// #### @str {string} String to be escaped\n// Escape string for use in Javascript regex\n//\nutile.escapeRegExp = function (str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n};\n\n//\n// ### function randomString (length)\n// #### @length {integer} The number of bits for the random base64 string returned to contain\n// randomString returns a pseude-random ASCII string (subset)\n// the return value is a string of length ⌈bits/6⌉ of characters\n// from the base64 alphabet.\n//\nutile.randomString = function (length) {\n  var chars, rand, i, ret, mod, bits;\n\n  chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_-';\n  ret = '';\n  // standard 4\n  mod = 4;\n  // default is 16\n  bits = length * mod || 64;\n\n  // in v8, Math.random() yields 32 pseudo-random bits (in spidermonkey it gives 53)\n  while (bits > 0) {\n    // 32-bit integer\n    rand = Math.floor(Math.random() * 0x100000000);\n    //we use the top bits\n    for (i = 26; i > 0 && bits > 0; i -= mod, bits -= mod) {\n      ret += chars[0x3F & rand >>> i];\n    }\n  }\n\n  return ret;\n};\n\n//\n// ### function filter (object, test)\n// #### @obj {Object} Object to iterate over\n// #### @pred {function} Predicate applied to each property. `function (value, key, object)`\n// Returns an object with properties from `obj` which satisfy\n// the predicate `pred`\n//\nutile.filter = function (obj, pred) {\n  var copy;\n  if (Array.isArray(obj)) {\n    copy = [];\n    utile.each(obj, function (val, key) {\n      if (pred(val, key, obj)) {\n        copy.push(val);\n      }\n    });\n  }\n  else {\n    copy = {};\n    utile.each(obj, function (val, key) {\n      if (pred(val, key, obj)) {\n        copy[key] = val;\n      }\n    });\n  }\n  return copy;\n};\n\n//\n// ### function requireDir (directory)\n// #### @directory {string} Directory to require\n// Requires all files and directories from `directory`, returning an object\n// with keys being filenames (without trailing `.js`) and respective values\n// being return values of `require(filename)`.\n//\nutile.requireDir = function (directory) {\n  var result = {},\n      files = fs.readdirSync(directory);\n\n  files.forEach(function (file) {\n    if (file.substr(-3) === '.js') {\n      file = file.substr(0, file.length - 3);\n    }\n    result[file] = require(path.resolve(directory, file));\n  });\n  return result;\n};\n\n//\n// ### function requireDirLazy (directory)\n// #### @directory {string} Directory to require\n// Lazily requires all files and directories from `directory`, returning an\n// object with keys being filenames (without trailing `.js`) and respective\n// values (getters) being return values of `require(filename)`.\n//\nutile.requireDirLazy = function (directory) {\n  var result = {},\n      files = fs.readdirSync(directory);\n\n  files.forEach(function (file) {\n    if (file.substr(-3) === '.js') {\n      file = file.substr(0, file.length - 3);\n    }\n    Object.defineProperty(result, file, {\n      get: function() {\n        return result[file] = require(path.resolve(directory, file));\n      }\n    });\n  });\n\n  return result;\n};\n\n//\n// ### function clone (object, filter)\n// #### @object {Object} Object to clone\n// #### @filter {Function} Filter to be used\n// Shallow clones the specified object.\n//\nutile.clone = function (object, filter) {\n  return Object.keys(object).reduce(filter ? function (obj, k) {\n    if (filter(k)) obj[k] = object[k];\n    return obj;\n  } : function (obj, k) {\n    obj[k] = object[k];\n    return obj;\n  }, {});\n};\n\n//\n// ### function camelToUnderscore (obj)\n// #### @obj {Object} Object to convert keys on.\n// Converts all keys of the type `keyName` to `key_name` on the\n// specified `obj`.\n//\nutile.camelToUnderscore = function (obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj;\n  }\n\n  if (Array.isArray(obj)) {\n    obj.forEach(utile.camelToUnderscore);\n    return obj;\n  }\n\n  Object.keys(obj).forEach(function (key) {\n    var k = utile.inflect.underscore(key);\n    if (k !== key) {\n      obj[k] = obj[key];\n      delete obj[key];\n      key = k;\n    }\n    utile.camelToUnderscore(obj[key]);\n  });\n\n  return obj;\n};\n\n//\n// ### function underscoreToCamel (obj)\n// #### @obj {Object} Object to convert keys on.\n// Converts all keys of the type `key_name` to `keyName` on the\n// specified `obj`.\n//\nutile.underscoreToCamel = function (obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj;\n  }\n\n  if (Array.isArray(obj)) {\n    obj.forEach(utile.underscoreToCamel);\n    return obj;\n  }\n\n  Object.keys(obj).forEach(function (key) {\n    var k = utile.inflect.camelize(key, false);\n    if (k !== key) {\n      obj[k] = obj[key];\n      delete obj[key];\n      key = k;\n    }\n    utile.underscoreToCamel(obj[key]);\n  });\n\n  return obj;\n};\n","/home/travis/build/npmtest/node-npmtest-utile/node_modules/utile/lib/format.js":"/*\n * format.js: `util.format` enhancement to allow custom formatting parameters.\n *\n * (C) 2011, Charlie Robbins & the Contributors\n * MIT LICENSE\n *\n */\n\nvar util = require('util');\n\nexports = module.exports = function(str) {\n  var formats = [].slice.call(arguments, 1, 3);\n\n  if (!(formats[0] instanceof Array && formats[1] instanceof Array) || arguments.length > 3)\n    return util.format.apply(null, arguments);\n\n  var replacements = formats.pop(),\n      formats = formats.shift();\n\n  formats.forEach(function(format, id) {\n    str = str.replace(new RegExp(format), replacements[id]);\n  });\n\n  return str;\n};\n","/home/travis/build/npmtest/node-npmtest-utile/node_modules/utile/lib/args.js":"/*\n * args.js: function argument parsing helper utility\n *\n * (C) 2011, Charlie Robbins & the Contributors\n * MIT LICENSE\n *\n */\n\nvar utile = require('./index');\n\n//\n// ### function args(_args)\n// #### _args {Arguments} Original function arguments\n//\n// Top-level method will accept a javascript \"arguments\" object (the actual keyword\n// \"arguments\" inside any scope), and attempt to return back an intelligent object\n// representing the functions arguments\n//\nmodule.exports = function (_args) {\n  var args = utile.rargs(_args),\n      _cb;\n\n  //\n  // Find and define the first argument\n  //\n  Object.defineProperty(args, 'first', { value: args[0] });\n\n  //\n  // Find and define any callback\n  //\n  _cb = args[args.length - 1] || args[args.length];\n  if (typeof _cb === \"function\") {\n    Object.defineProperty(args, 'callback', { value: _cb });\n    Object.defineProperty(args, 'cb', { value: _cb });\n    args.pop();\n  }\n\n  //\n  // Find and define the last argument\n  //\n  if (args.length) {\n    Object.defineProperty(args, 'last', { value: args[args.length - 1] });\n  }\n\n  return args;\n};\n","/home/travis/build/npmtest/node-npmtest-utile/node_modules/utile/lib/base64.js":"/*\n * base64.js: An extremely simple implementation of base64 encoding / decoding using node.js Buffers\n *\n * (C) 2010, Charlie Robbins & the Contributors.\n *\n */\n\nvar base64 = exports;\n\n//\n// ### function encode (unencoded)\n// #### @unencoded {string} The string to base64 encode\n// Encodes the specified string to base64 using node.js Buffers.\n//\nbase64.encode = function (unencoded) {\n  var encoded;\n\n  try {\n    encoded = new Buffer(unencoded || '').toString('base64');\n  }\n  catch (ex) {\n    return null;\n  }\n\n  return encoded;\n};\n\n//\n// ### function decode (encoded)\n// #### @encoded {string} The string to base64 decode\n// Decodes the specified string from base64 using node.js Buffers.\n//\nbase64.decode = function (encoded) {\n  var decoded;\n\n  try {\n    decoded = new Buffer(encoded || '', 'base64').toString('utf8');\n  }\n  catch (ex) {\n    return null;\n  }\n\n  return decoded;\n};\n","/home/travis/build/npmtest/node-npmtest-utile/node_modules/utile/lib/file.js":"/*\n * file.js: Simple utilities for working with the file system.\n *\n * (C) 2011, Charlie Robbins & the Contributors\n * MIT LICENSE\n *\n */\n\nvar fs = require('fs');\n\nexports.readJson = exports.readJSON = function (file, callback) {\n  if (typeof callback !== 'function') {\n    throw new Error('utile.file.readJson needs a callback');\n  }\n\n  fs.readFile(file, 'utf-8', function (err, data) {\n    if (err) {\n      return callback(err);\n    }\n\n    try {\n      var json = JSON.parse(data);\n      callback(null, json);\n    }\n    catch (err) {\n      return callback(err);\n    }\n  });\n};\n\nexports.readJsonSync = exports.readJSONSync = function (file) {\n  return JSON.parse(fs.readFileSync(file, 'utf-8'));\n};\n"}